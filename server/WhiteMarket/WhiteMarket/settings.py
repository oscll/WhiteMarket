"""
Django settings for WhiteMarket project.

Generated by 'django-admin startproject' using Django 2.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import datetime

# Build paths inside the project like this: os.path.join(BASE_DIR, ...) abspath
BASE_DIR = os.path.dirname(os.path.dirname(os.path.relpath(__file__)))
BASE_DIR_REL = os.path.dirname(os.path.dirname(os.path.relpath(__file__)))

ENV_PATH = os.path.abspath(os.path.dirname(__file__))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in p4104a9d1-ed89-4deb-9755-84015a9897b5.jpgroduction secret!
SECRET_KEY = '$)=s+ibwqdf05*gh_m0q^zg^zji+rk^sudf8g(aqyq9_ame-9*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1'
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'djoser',

    'WhiteMarket.apps.products.apps.ProductsConfig',
    'WhiteMarket.apps.user.apps.UserConfig',
    'WhiteMarket.apps.images.apps.ImagesConfig',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware' ,
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


CORS_ORIGIN_WHITELIST = (
    'localhost:8000',
    '127.0.0.1:8080',
    'localhost:8000',
    'localhost:8080'
)

ROOT_URLCONF = 'WhiteMarket.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'WhiteMarket.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

""" DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
} """
DATABASES = { 
    'default': { 
        'ENGINE': 'django.db.backends.postgresql', 
        'NAME': 'blackmarket', 
        'USER': 'oscll', 
        'PASSWORD': 'password', 
        'HOST': '127.0.0.1', 
        'PORT': '5432', 
    } 
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

""" MEDIA_ROOT = os.path.join(BASE_DIR_REL, 'static','upload', 'pictures')
MEDIA_URL = os.path.join(STATIC_URL, 'upload', 'pictures/')  """
MEDIA_ROOT = os.path.join(BASE_DIR_REL,'WhiteMarket', 'apps', 'images/' 'static','upload', 'pictures')
MEDIA_URL = os.path.join(ENV_PATH , STATIC_URL, 'upload', 'pictures/') 


#REST_FRAMEWORK
REST_FRAMEWORK = { 
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication', 
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication', 
        ),
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.OrderingFilter',
        'rest_framework.filters.SearchFilter',
        )
} 

#AUTH_USER_MODEL
AUTH_USER_MODEL = 'user.User'
ACTIVATION_URL = False

CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'token'
)

JWT_AUTH = {
    'JWT_ALLOW_REFRESH': True,
    'JWT_EXPIRATION_DELTA': datetime.timedelta(seconds=604800),  # 7 days
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(seconds=604800),  # 7 days
}